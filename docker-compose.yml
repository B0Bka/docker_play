# tell docker what version of the docker-compose.yml were using
version: '3'

# define the network
networks:
  web-network:

# start the services section
services:
  # define the name of our service
  # corresponds to the "--name" parameter
  docker-php-cli:
    # define the directory where the build should happened,
    # i.e. where the Dockerfile of the service is located
    # all paths are relative to the location of docker-compose.yml
    build: 
      context: ./php-cli
    # make the SSH port available via port mapping
    ports:
    - "2222:22"
    # reserve a tty - otherwise the container shuts down immediately
    # corresponds to the "-i" flag
    tty: true
    # mount the app directory of the host to /var/www in the container
    # corresponds to the "-v" option
    volumes:
      - ./app:/var/www
      - ./php-cli/conf.d/php.ini:/usr/local/etc/php/conf.d/custom.ini
    # connect to the network
    # corresponds to the "--network" option
    networks:
      - web-network

  docker-nginx:
    build:
      context: ./nginx
    # defines the port mapping
    # corresponds to the "-p" flag
    ports:
      - "8075:80"
    tty: true
    volumes:
      - ./app:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
    networks:
      - web-network

  database:
    image: mysql:latest
    container_name: locations-service-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - .data/db:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    links:
      - database
    ports:
      - 8082:80
    environment:
      MYSQL_USERNAME: root
      MYSQL_ROOT_PASSWORD: examplepass
      PMA_HOST: database

  maildev:
    image: djfarrelly/maildev
    container_name: sd2_maildev
    ports:
      - 8002:80
